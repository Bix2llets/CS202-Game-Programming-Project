#include "Utility/SignalMap.hpp"

#include "Core/MouseState.hpp"
#include "Core/KeyboardState.hpp"

Mouse SignalMap::mapSfmlMouseButton(sf::Mouse::Button button) {
    switch (button) {
        case sf::Mouse::Button::Left:
            return Mouse::Left;
        case sf::Mouse::Button::Right:
            return Mouse::Right;
        default:
            return Mouse::Left; // Or Mouse::Unknown if you have it
    }
}

Key SignalMap::mapSfmlKey(sf::Keyboard::Key key) {
    switch (key) {
        case sf::Keyboard::Key::A:
            return Key::A;
            case sf::Keyboard::Key::B:
                return Key::B;
            case sf::Keyboard::Key::C:
                return Key::C;
            case sf::Keyboard::Key::D:
                return Key::D;
            case sf::Keyboard::Key::E:
                return Key::E;
            case sf::Keyboard::Key::F:
                return Key::F;
            case sf::Keyboard::Key::G:
                return Key::G;
            case sf::Keyboard::Key::H:
                return Key::H;
            case sf::Keyboard::Key::I:
                return Key::I;
            case sf::Keyboard::Key::J:
                return Key::J;
            case sf::Keyboard::Key::K:
                return Key::K;
            case sf::Keyboard::Key::L:
                return Key::L;
            case sf::Keyboard::Key::M:
                return Key::M;
            case sf::Keyboard::Key::N:
                return Key::N;
            case sf::Keyboard::Key::O:
                return Key::O;
            case sf::Keyboard::Key::P:
                return Key::P;
            case sf::Keyboard::Key::Q:
                return Key::Q;
            case sf::Keyboard::Key::R:
                return Key::R;
            case sf::Keyboard::Key::S:
                return Key::S;
            case sf::Keyboard::Key::T:
                return Key::T;
            case sf::Keyboard::Key::U:
                return Key::U;
            case sf::Keyboard::Key::V:
                return Key::V;
            case sf::Keyboard::Key::W:
                return Key::W;
            case sf::Keyboard::Key::X:
                return Key::X;
            case sf::Keyboard::Key::Y:
                return Key::Y;
            case sf::Keyboard::Key::Z:
                return Key::Z;
            case sf::Keyboard::Key::Num0:
                return Key::Num0;
            case sf::Keyboard::Key::Num1:
                return Key::Num1;
            case sf::Keyboard::Key::Num2:
                return Key::Num2;
            case sf::Keyboard::Key::Num3:
                return Key::Num3;
            case sf::Keyboard::Key::Num4:
                return Key::Num4;
            case sf::Keyboard::Key::Num5:
                return Key::Num5;
            case sf::Keyboard::Key::Num6:
                return Key::Num6;
            case sf::Keyboard::Key::Num7:
                return Key::Num7;
            case sf::Keyboard::Key::Num8:
                return Key::Num8;
            case sf::Keyboard::Key::Num9:
                return Key::Num9;
            case sf::Keyboard::Key::Escape:
                return Key::Escape;
            case sf::Keyboard::Key::LControl:
                return Key::LControl;
            case sf::Keyboard::Key::LShift:
                return Key::LShift;
            case sf::Keyboard::Key::LAlt:
                return Key::LAlt;
            case sf::Keyboard::Key::LSystem:
                return Key::LSystem;
            case sf::Keyboard::Key::RControl:
                return Key::RControl;
            case sf::Keyboard::Key::RShift:
                return Key::RShift;
            case sf::Keyboard::Key::RAlt:
                return Key::RAlt;
            case sf::Keyboard::Key::RSystem:
                return Key::RSystem;
            case sf::Keyboard::Key::Menu:
                return Key::Menu;
            case sf::Keyboard::Key::LBracket:
                return Key::LBracket;
            case sf::Keyboard::Key::RBracket:
                return Key::RBracket;
            case sf::Keyboard::Key::Semicolon:
                return Key::Semicolon;
            case sf::Keyboard::Key::Comma:
                return Key::Comma;
            case sf::Keyboard::Key::Period:
                return Key::Period;
            case sf::Keyboard::Key::Apostrophe:
                return Key::Apostrophe;
            case sf::Keyboard::Key::Slash:
                return Key::Slash;
            case sf::Keyboard::Key::Backslash:
                return Key::Backslash;
            case sf::Keyboard::Key::Grave:
                return Key::Grave;
            case sf::Keyboard::Key::Equal:
                return Key::Equal;
            case sf::Keyboard::Key::Hyphen:
                return Key::Hyphen;
            case sf::Keyboard::Key::Space:
                return Key::Space;
            case sf::Keyboard::Key::Enter:
                return Key::Enter;
            case sf::Keyboard::Key::Backspace:
                return Key::Backspace;
            case sf::Keyboard::Key::Tab:
                return Key::Tab;
            case sf::Keyboard::Key::PageUp:
                return Key::PageUp;
            case sf::Keyboard::Key::PageDown:
                return Key::PageDown;
            case sf::Keyboard::Key::End:
                return Key::End;
            case sf::Keyboard::Key::Home:
                return Key::Home;
            case sf::Keyboard::Key::Insert:
                return Key::Insert;
            case sf::Keyboard::Key::Delete:
                return Key::Delete;
            case sf::Keyboard::Key::Add:
                return Key::Add;
            case sf::Keyboard::Key::Subtract:
                return Key::Subtract;
            case sf::Keyboard::Key::Multiply:
                return Key::Multiply;
            case sf::Keyboard::Key::Divide:
                return Key::Divide;
            case sf::Keyboard::Key::Left:
                return Key::Left;
            case sf::Keyboard::Key::Right:
                return Key::Right;
            case sf::Keyboard::Key::Up:
                return Key::Up;
            case sf::Keyboard::Key::Down:
                return Key::Down;
            case sf::Keyboard::Key::Numpad0:
                return Key::Numpad0;
            case sf::Keyboard::Key::Numpad1:
                return Key::Numpad1;
            case sf::Keyboard::Key::Numpad2:
                return Key::Numpad2;
            case sf::Keyboard::Key::Numpad3:
                return Key::Numpad3;
            case sf::Keyboard::Key::Numpad4:
                return Key::Numpad4;
            case sf::Keyboard::Key::Numpad5:
                return Key::Numpad5;
            case sf::Keyboard::Key::Numpad6:
                return Key::Numpad6;
            case sf::Keyboard::Key::Numpad7:
                return Key::Numpad7;
            case sf::Keyboard::Key::Numpad8:
                return Key::Numpad8;
            case sf::Keyboard::Key::Numpad9:
                return Key::Numpad9;
            case sf::Keyboard::Key::F1:
                return Key::F1;
            case sf::Keyboard::Key::F2:
                return Key::F2;
            case sf::Keyboard::Key::F3:
                return Key::F3;
            case sf::Keyboard::Key::F4:
                return Key::F4;
            case sf::Keyboard::Key::F5:
                return Key::F5;
            case sf::Keyboard::Key::F6:
                return Key::F6;
            case sf::Keyboard::Key::F7:
                return Key::F7;
            case sf::Keyboard::Key::F8:
                return Key::F8;
            case sf::Keyboard::Key::F9:
                return Key::F9;
            case sf::Keyboard::Key::F10:
                return Key::F10;
            case sf::Keyboard::Key::F11:
                return Key::F11;
            case sf::Keyboard::Key::F12:
                return Key::F12;
            case sf::Keyboard::Key::F13:
                return Key::F13;
            case sf::Keyboard::Key::F14:
                return Key::F14;
            case sf::Keyboard::Key::F15:
                return Key::F15;
            case sf::Keyboard::Key::Pause:
                return Key::Pause;
            default:
                return Key::Unknown;
    }
}